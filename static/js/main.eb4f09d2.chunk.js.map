{"version":3,"sources":["enums/FilterOption.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","services/todosFilter.ts","App.tsx","hooks/useFilter.ts","index.tsx"],"names":["FilterOption","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","cn","title","type","onClick","showTodoClick","TodoFilter","filter","filterInput","useRef","value","filterOption","onChange","event","target","save","filterText","ACTIVE","COMPLETED","ALL","ref","placeholder","onInput","currentTarget","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","fetchUser","a","userId","response","href","email","name","todosFilter","filteredTodos","search","toLowerCase","includes","filterBySearch","option","filterByCompleted","App","setTodos","setFilterText","setFilterOption","text","useFilter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb4f09d2.chunk.js","sourcesContent":["export enum FilterOption {\n  COMPLETED = 'completed',\n  ALL = 'all',\n  ACTIVE = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props>\n= ({ todos, selectedTodo, setSelectedTodo }) => {\n  const showTodoClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : <td className=\"is-vcentered\" />}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => showTodoClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo !== todo,\n                    'fa-eye-slash': selectedTodo === todo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useRef } from 'react';\nimport { FilterOption } from '../../enums/FilterOption';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter }) => {\n  const filterInput = useRef<HTMLInputElement>(null);\n\n  const filterOptionChangeHandler\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      const newFilterOption = event.target.value;\n\n      switch (newFilterOption) {\n        case 'active':\n          filter.save(filter.filterText, FilterOption.ACTIVE);\n          break;\n        case 'completed':\n          filter.save(filter.filterText, FilterOption.COMPLETED);\n          break;\n        default:\n          filter.save(filter.filterText, FilterOption.ALL);\n      }\n    };\n\n  const filterTextChangeHandler\n    = (event: React.FormEvent<HTMLInputElement>) => {\n      filter.save(event.currentTarget.value, filter.filterOption);\n    };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.filterOption}\n            onChange={filterOptionChangeHandler}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          ref={filterInput}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onInput={filterTextChangeHandler}\n          value={filter.filterText}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.filterText && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => filter.save('', filter.filterOption)}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await getUser(todo.userId);\n\n      setUser(response);\n    };\n\n    fetchUser();\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FilterOption } from '../enums/FilterOption';\nimport { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nconst filterByCompleted = (todos: Todo[], option: FilterOption) => {\n  switch (option) {\n    case FilterOption.ACTIVE:\n      return todos.filter((todo) => !todo.completed);\n    case FilterOption.COMPLETED:\n      return todos.filter((todo) => todo.completed);\n    default: return todos;\n  }\n};\n\nconst filterBySearch = (todos: Todo[], search: string) => {\n  if (!search) {\n    return todos;\n  }\n\n  return todos.filter((todo) => todo.title\n    .toLowerCase().includes(search.toLowerCase()));\n};\n\nexport const todosFilter = (todos: Todo[], filter: Filter): Todo[] => {\n  const { filterOption, filterText } = filter;\n  const filteredTodos = filterBySearch(todos, filterText);\n\n  return filterByCompleted(filteredTodos, filterOption);\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useFilter } from './hooks/useFilter';\nimport { Todo } from './types/Todo';\nimport { todosFilter } from './services/todosFilter';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const filter = useFilter();\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              {\n                todos.length !== 0\n                && (\n                  <TodoList\n                    todos={todosFilter(todos, filter)}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedTodo !== null\n        && (<TodoModal todo={selectedTodo} setSelectedTodo={setSelectedTodo} />)\n      }\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { FilterOption } from '../enums/FilterOption';\nimport { Filter } from '../types/Filter';\n\nexport const useFilter = (): Filter => {\n  const [filterText, setFilterText] = useState<string>('');\n  const [filterOption, setFilterOption]\n  = useState<FilterOption>(FilterOption.ALL);\n\n  const save = (text: string, option: FilterOption) => {\n    setFilterText(text);\n    setFilterOption(option);\n  };\n\n  return {\n    filterText,\n    filterOption,\n    save,\n  };\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}